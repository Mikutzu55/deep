{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signInWithRedirect, OAuthProvider } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { getDoc, doc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nif (!firebaseConfig.apiKey) {\n  console.error('Missing Firebase configuration!');\n  throw new Error('Firebase configuration error');\n}\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst storage = getStorage(app);\n\n// Google and Apple Providers\nconst googleProvider = new GoogleAuthProvider();\nconst appleProvider = new OAuthProvider('apple.com');\nexport { auth, db, storage, googleProvider, appleProvider, signInWithPopup, signInWithRedirect };\nexport default app;\n// Add user profile creation\nonAuthStateChanged(auth, async user => {\n  if (user) {\n    const userRef = doc(db, 'users', user.uid);\n    const docSnap = await getDoc(userRef);\n    if (!docSnap.exists()) {\n      await setDoc(userRef, {\n        email: user.email,\n        phone: user.phoneNumber || '',\n        membership: 'Free',\n        searches: [],\n        createdAt: new Date()\n      });\n    }\n  }\n});","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","signInWithRedirect","OAuthProvider","getFirestore","getStorage","onAuthStateChanged","getDoc","doc","setDoc","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","console","error","Error","app","auth","db","storage","googleProvider","appleProvider","user","userRef","uid","docSnap","exists","email","phone","phoneNumber","membership","searches","createdAt","Date"],"sources":["C:/Users/Edi/Desktop/MyWebsite/src/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  signInWithRedirect,\r\n  OAuthProvider,\r\n} from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { getDoc, doc, setDoc } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nif (!firebaseConfig.apiKey) {\r\n  console.error('Missing Firebase configuration!');\r\n  throw new Error('Firebase configuration error');\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst storage = getStorage(app);\r\n\r\n// Google and Apple Providers\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst appleProvider = new OAuthProvider('apple.com');\r\n\r\nexport {\r\n  auth,\r\n  db,\r\n  storage,\r\n  googleProvider,\r\n  appleProvider,\r\n  signInWithPopup,\r\n  signInWithRedirect,\r\n};\r\nexport default app;\r\n// Add user profile creation\r\nonAuthStateChanged(auth, async (user) => {\r\n  if (user) {\r\n    const userRef = doc(db, 'users', user.uid);\r\n    const docSnap = await getDoc(userRef);\r\n    if (!docSnap.exists()) {\r\n      await setDoc(userRef, {\r\n        email: user.email,\r\n        phone: user.phoneNumber || '',\r\n        membership: 'Free',\r\n        searches: [],\r\n        createdAt: new Date(),\r\n      });\r\n    }\r\n  }\r\n});\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,aAAa,QACR,eAAe;AACtB,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,MAAM,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAExD,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACpDC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC;EAC5DC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC;EACrEC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW,yBAAyB;EAC5CC,aAAa,EAAEb,OAAO,CAACC,GAAG,CAACa;AAC7B,CAAC;AAED,IAAI,CAAChB,cAAc,CAACC,MAAM,EAAE;EAC1BgB,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;EAChD,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;AACjD;AAEA,MAAMC,GAAG,GAAGhC,aAAa,CAACY,cAAc,CAAC;AACzC,MAAMqB,IAAI,GAAGhC,OAAO,CAAC+B,GAAG,CAAC;AACzB,MAAME,EAAE,GAAG5B,YAAY,CAAC0B,GAAG,CAAC;AAC5B,MAAMG,OAAO,GAAG5B,UAAU,CAACyB,GAAG,CAAC;;AAE/B;AACA,MAAMI,cAAc,GAAG,IAAIlC,kBAAkB,CAAC,CAAC;AAC/C,MAAMmC,aAAa,GAAG,IAAIhC,aAAa,CAAC,WAAW,CAAC;AAEpD,SACE4B,IAAI,EACJC,EAAE,EACFC,OAAO,EACPC,cAAc,EACdC,aAAa,EACblC,eAAe,EACfC,kBAAkB;AAEpB,eAAe4B,GAAG;AAClB;AACAxB,kBAAkB,CAACyB,IAAI,EAAE,MAAOK,IAAI,IAAK;EACvC,IAAIA,IAAI,EAAE;IACR,MAAMC,OAAO,GAAG7B,GAAG,CAACwB,EAAE,EAAE,OAAO,EAAEI,IAAI,CAACE,GAAG,CAAC;IAC1C,MAAMC,OAAO,GAAG,MAAMhC,MAAM,CAAC8B,OAAO,CAAC;IACrC,IAAI,CAACE,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;MACrB,MAAM/B,MAAM,CAAC4B,OAAO,EAAE;QACpBI,KAAK,EAAEL,IAAI,CAACK,KAAK;QACjBC,KAAK,EAAEN,IAAI,CAACO,WAAW,IAAI,EAAE;QAC7BC,UAAU,EAAE,MAAM;QAClBC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE,IAAIC,IAAI,CAAC;MACtB,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}